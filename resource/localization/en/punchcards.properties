wire_punchcard=Wire Punchcards
tool.wire_punchcard_reader.name=Punchcard Reader(Wire)
tool.wire_punchcard_reader.desc=Spawns a Punchcard Reader!
tool.wire_punchcard_reader.left=Create a Punchcard Reader


tool.wire_punchcard_writer.name=Punchcard Writer(Wire)
tool.wire_punchcard_writer.desc=Spawns a Punchcard Writer!
tool.wire_punchcard_writer.left=Create a Punchcard Writer


wire_punchcard.reversable=Allow Bottom Insertion
wire_punchcard.silentpunch=Silent Punching




wire_punchcard.ponder.devices.catname=Punchcard Devices
wire_punchcard.ponder.devices.catdesc=Info regarding How to Operate Punchcard Readers and Writers




wire_punchcard.ponder.card.catname=Punchcards
wire_punchcard.ponder.card.catdesc=Info regarding Punchcards themselves

wire_punchcard.ponder.continuenext=Continued in next ponder.

wire_punchcard.ponder.card.basics.menuname=Punchcard Basics
wire_punchcard.ponder.card.basics.playname=Basics of Punchcards
wire_punchcard.ponder.card.basics.description=Learn the basics of what a Punchcard looks like
wire_punchcard.ponder.card.basics.punchcard_inspect=A Punchcard, one of the key elements of Wire Punchcards
wire_punchcard.ponder.card.basics.punchcard_text_1=This is a Punchcard.
wire_punchcard.ponder.card.basics.punchcard_text_2=It can carry data via holes punched in its surface.
wire_punchcard.ponder.card.basics.punchcard_text_3=Press %s+%s on one to take a look at it!
wire_punchcard.ponder.card.basics.punchcard_text_4=When you do so, a UI will appear.
wire_punchcard.ponder.card.basics.punchcard_text_5=A Punchcards data is divided into Columns and Rows.
wire_punchcard.ponder.card.basics.punchcard_text_6=This Card has 4 Columns ^
wire_punchcard.ponder.card.basics.punchcard_text_7=^ And 16 Rows


wire_punchcard.ponder.card.operation.menuname=Punchcard Operation
wire_punchcard.ponder.card.operation.playname=How to Operate a Punchcard
wire_punchcard.ponder.card.operation.description=Learn how to Punch and Patch Punchcards by hand
wire_punchcard.ponder.card.operation.punchcard_inspect=A Punchcard, one of the key elements of Wire Punchcards.
wire_punchcard.ponder.card.operation.punchcard_text_1=You can use RMB with the Punchcard tool to open the UI too.
wire_punchcard.ponder.card.operation.punchcard_text_2=Using the toolgun to open the UI lets you punch holes into the card.
wire_punchcard.ponder.card.operation.punchcard_text_3=Left Clicking(LMB) on one of the Columns will Punch it.
wire_punchcard.ponder.card.operation.punchcard_text_4=If you make a mistake, Right Click(RMB) on a Column to Patch it
wire_punchcard.ponder.card.operation.punchcard_text_5=Patched and Unpunched holes will look the same to mechanical readers.

wire_punchcard.ponder.card.reading.menuname=Punchcard Reading
wire_punchcard.ponder.card.reading.playname=Binary 101
wire_punchcard.ponder.card.reading.description=Learn how to read a Punchcard by hand
wire_punchcard.ponder.card.reading.punchcard_inspect=A Punchcard, you might be able to read them yourself after this.
wire_punchcard.ponder.card.reading.punchcard_text_1=Punchcards store information via the holes punched on their surface.
wire_punchcard.ponder.card.reading.punchcard_text_2=The information is stored in Binary, or Base 2.
wire_punchcard.ponder.card.reading.punchcard_text_3=Each Hole punched represents 1 Bit.
wire_punchcard.ponder.card.reading.punchcard_text_4=To get the Value a Column represents, take the Column Digit and raise 2 to the power of it.
wire_punchcard.ponder.card.reading.punchcard_text_5=To get the Value a Row represents, add the Values of each Punched Column in the Row together.
wire_punchcard.ponder.card.reading.punchcard_text_6=If you would like to test your understanding and read the values yourself, Pause Now.
wire_punchcard.ponder.card.reading.punchcard_text_7=(The rest of the rows are 0)

wire_punchcard.ponder.card.overpunch.menuname=Overpunch Cards
wire_punchcard.ponder.card.overpunch.playname=Punchcards with Overpunching
wire_punchcard.ponder.card.overpunch.description=Learn about what "Overpunch" means when selecting cards
wire_punchcard.ponder.card.overpunch.punchcard_inspect=An Overpunch card, it looks the same as a regular Punchcard but has extra unmarked columns
wire_punchcard.ponder.card.overpunch.punchcard_text_1=Overpunch cards are like regular Punchcards, but they have additional columns that are unmarked.
wire_punchcard.ponder.card.overpunch.punchcard_text_2=These columns start above the rest, but are counted as the *last* columns on the row.
wire_punchcard.ponder.card.overpunch.punchcard_text_3=These "Overpunch" Columns have many names, but despite their different placement, function the same as regular columns.
wire_punchcard.ponder.card.overpunch.punchcard_text_4=Punching through them can also hide the card text.

wire_punchcard.ponder.card.color.menuname=Punchcard Colors
wire_punchcard.ponder.card.color.playname=Coloring Cards
wire_punchcard.ponder.card.color.description=Learn how to change your card colors
wire_punchcard.ponder.card.color.punchcard_inspect=A Punchcard, but colored
wire_punchcard.ponder.card.color.punchcard_color1=White (uses default coloring)
wire_punchcard.ponder.card.color.punchcard_color2=Verdant Green
wire_punchcard.ponder.card.color.punchcard_color3=Marble Blue
wire_punchcard.ponder.card.color.punchcard_color4=Salmon Red
wire_punchcard.ponder.card.color.punchcard_color5=Purple Haze
wire_punchcard.ponder.card.color.punchcard_color6=Default
wire_punchcard.ponder.card.color.punchcard_text_1=Punchcards can be recolored, just like any other Entity.
wire_punchcard.ponder.card.color.punchcard_text_2=Use the Color tool, or any other means to change their Color.
wire_punchcard.ponder.card.color.punchcard_text_3=Doing so also changes the colors in the Punchcard UI.
wire_punchcard.ponder.card.color.punchcard_text_4=Here are a few examples.

wire_punchcard.ponder.device.basics.menuname=Standard Device I/O
wire_punchcard.ponder.device.basics.playname=Basics of Punchcard Devices
wire_punchcard.ponder.device.basics.description=Learn the basics of how to operate Punchcard Devices
wire_punchcard.ponder.device.basics.punchcard_inspect=A Punchcard, one of the key elements of Wire Punchcards
wire_punchcard.ponder.device.basics.device_inspect=A generic Punchcard Device for demonstration purposes. Has no read or write capability.
wire_punchcard.ponder.device.basics.punchcard_text_1=This is a Punchcard Device.
wire_punchcard.ponder.device.basics.punchcard_text_2=When you place a Punchcard near the top...
wire_punchcard.ponder.device.basics.punchcard_text_3=It will grab the Punchcard.
# don't translate the quoted text below, they're the input | output names
wire_punchcard.ponder.device.basics.punchcard_text_4=When the card has been inserted from the top, the device will output 1 on "Punchcard Inserted"
wire_punchcard.ponder.device.basics.punchcard_text_5=You can pulse the "Shift Row" input to tell the device to shift the card by that many rows.
wire_punchcard.ponder.device.basics.punchcard_text_6=While the device is moving forward, the "Currently Shifting" output will be 1.
wire_punchcard.ponder.device.basics.punchcard_text_7=When the end is reached in either direction, the card is ejected.
wire_punchcard.ponder.device.basics.punchcard_text_8=If enabled, you can also insert cards from the bottom.
wire_punchcard.ponder.device.basics.punchcard_text_9=Doing so starts at the last row, and "Punchcard Inserted" will report -1 when this happens.
wire_punchcard.ponder.device.basics.punchcard_text_10=You can also shift in reverse by pulsing "Shift Row" with negative numbers.
wire_punchcard.ponder.device.basics.punchcard_text_11=While reverse shifting, "Currently Shifting" will output -1.

wire_punchcard.ponder.device.reader.menuname=Punchcard Readers
wire_punchcard.ponder.device.reader.playname=How to use Punchcard Readers
wire_punchcard.ponder.device.reader.description=Learn the basics of how to read Punchcards via a Punchcard Reader
wire_punchcard.ponder.device.reader.punchcard_inspect=A Punchcard, one of the key elements of Wire Punchcards
wire_punchcard.ponder.device.reader.device_inspect=A Punchcard Reader, this can output numbers as read from the inserted card.
wire_punchcard.ponder.device.reader.punchcard_text_1=This is a Punchcard Reader.
wire_punchcard.ponder.device.reader.punchcard_text_2=It will read the Value stored at the current Row of the Punchcard.
wire_punchcard.ponder.device.reader.punchcard_text_3=When shifting, the "Data" output will automatically update each time it shifts.
wire_punchcard.ponder.device.reader.punchcard_text_4=Here is the Highspeed / Wirelink Memory Map and which inputs/outputs they map to.

# don't translate this list below, they're the input | output names
wire_punchcard.ponder.device.reader.highspeed_r_0=Currently Shifting
wire_punchcard.ponder.device.reader.highspeed_r_1=Punchcard Inserted
wire_punchcard.ponder.device.reader.highspeed_r_2=Data
wire_punchcard.ponder.device.reader.highspeed_w_0=Shift Row

wire_punchcard.ponder.device.writer.menuname=Punchcard Writers
wire_punchcard.ponder.device.writer.playname=How to use Punchcard Writers
wire_punchcard.ponder.device.writer.description=Learn the basics of how to write Punchcards via a Punchcard Writer
wire_punchcard.ponder.device.writer.punchcard_inspect=A Punchcard, one of the key elements of Wire Punchcards
wire_punchcard.ponder.device.writer.device_inspect=A Punchcard Writer, this can punch holes into cards to store data.
wire_punchcard.ponder.device.writer.punchcard_text_1=This is a Punchcard Writer.
wire_punchcard.ponder.device.writer.punchcard_text_2=Set the data you want written to the current Row.
wire_punchcard.ponder.device.writer.punchcard_text_3=And then pulse "CLK" to write the value to the Row.
wire_punchcard.ponder.device.writer.punchcard_text_4=Only whole numbers can be written to a card.
wire_punchcard.ponder.device.writer.punchcard_text_5=Any value higher than the Row can represent loses information.
wire_punchcard.ponder.device.writer.punchcard_text_6=Take care not to pulse "CLK" while "Currently Shifting" is not 0

# don't translate this list below, they're the input | output names
wire_punchcard.ponder.device.writer.highspeed_r_0=Currently Shifting
wire_punchcard.ponder.device.writer.highspeed_r_1=Punchcard Inserted
wire_punchcard.ponder.device.writer.highspeed_r_2=Data(Write)
wire_punchcard.ponder.device.writer.highspeed_w_0=Shift Row
wire_punchcard.ponder.device.writer.highspeed_w_1=CLK(Write)
wire_punchcard.ponder.device.writer.highspeed_w_2=Data(Write)
